name: custom actions
on:
  push:
    branches: [main, prod]

jobs:
  testing-actions:
    runs-on: ubuntu-latest
    steps:
      - name: checkout files to vm
        uses: actions/checkout@v2.3.4

      - name: SampleStore v1.0.0 deploying to development tenant
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ./.github/actions/wso2apim/
        id: apim1
        with:
          usernameDevTenant: "mihindu@wso2.com@development"
          passwordDevTenant: ${{secrets.PASSWORD}}
          APIProjectName: "SampleStore"
          # OASJsonFilePath: "./SampleStore/1.0.0/Meta-information/swagger.yaml"
          # APIDefinitionFilePath: "./SampleStore/1.0.0/Meta-information/api.yaml"
          APIVersion: "1.0.0"
          # PostmanCollectionTestFile: "./SampleStore/1.0.0/Meta-information/sample_store.postman_collection.json"

      - name: SampleStore v2.0.0 deploying to development tenant
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ./.github/actions/wso2apim/
        id: apim2
        with:
          usernameDevTenant: "mihindu@wso2.com@development"
          passwordDevTenant: ${{secrets.PASSWORD}}
          APIProjectName: "SampleStore"
          # OASJsonFilePath: "./SampleStore/2.0.0/Meta-information/swagger.yaml"
          # APIDefinitionFilePath: "./SampleStore/2.0.0/Meta-information/api.yaml"
          APIVersion: "2.0.0"
          PostmanCollectionTestFile: "./SampleStore/2.0.0/Meta-information/sample_store.postman_collection.json"

      # - name: SampleStore v1.0.0 deploying to production tenant
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/production'
      #   uses: ./.github/actions/wso2apim/
      #   id: apim3
      #   with:
      #     usernameDevTenant: "mihindu@wso2.com@development"
      #     passwordDevTenant: ${{secrets.PASSWORD}}
      #     APIProjectName: "SampleStore"
      #     # OASJsonFilePath: "./SampleStore/1.0.0/Meta-information/swagger.yaml"
      #     # APIDefinitionFilePath: "./SampleStore/1.0.0/Meta-information/api.yaml"
      #     APIVersion: "1.0.0"
      #     # PostmanCollectionTestFile: "./SampleStore/1.0.0/Meta-information/sample_store.postman_collection.json"

      # - name: SampleStore v2.0.0 deploying to production tenant
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/production'
      #   uses: ./.github/actions/wso2apim/
      #   id: apim4
      #   with:
      #     usernameDevTenant: "mihindu@wso2.com@development"
      #     passwordDevTenant: ${{secrets.PASSWORD}}
      #     APIProjectName: "SampleStore"
      #     # OASJsonFilePath: "./SampleStore/2.0.0/Meta-information/swagger.yaml"
      #     # APIDefinitionFilePath: "./SampleStore/2.0.0/Meta-information/api.yaml"
      #     APIVersion: "2.0.0"
      #     # PostmanCollectionTestFile: "./SampleStore/2.0.0/Meta-information/sample_store.postman_collection.json"

      #------------------------------------------------------------------------------------------------------------------------------
      # - name: WSO2 APIMCloud CICD v1 - petstore
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   uses: mihinduranasinghe/WSO2-APIManager-Cloud-CICD-Beta@v1.0.0
      #   with:
      #     usernameTargettedTenant: "mihindu@wso2.com@development"
      #     passwordTargettedTenant: ${{secrets.PASSWORD}}
      #     APIProjectName: "SampleStore"
      #     APIVersion: "1.0.0"

      # - name: WSO2 APIMCloud CICD v2 - petstore
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   uses: mihinduranasinghe/WSO2-APIManager-Cloud-CICD-Beta@v1.0.0
      #   with:
      #     usernameTargettedTenant: "mihindu@wso2.com@development"
      #     passwordTargettedTenant: ${{secrets.PASSWORD}}
      #     APIProjectName: "SampleStore"
      #     APIVersion: "2.0.0"
#---------------------------------------------------
# - name: APIM Cloud CICD
#   uses: mihinduranasinghe/WSO2-APIManager-Cloud-CICD@v1.1.0
#   id: apim
#   with:
#     usernameDevTenant: "mihindu@wso2.com@development"
#     passwordDevTenant: ${{secrets.PASSWORD}}
#     usernameProdTenant: "mihindu@wso2.com@production"
#     passwordProdTenant: ${{secrets.PASSWORD}}
#     APIProjectName: "SampleStore"
#     OASJsonFilePath: "petstore.json"
#     APIDefinitionFilePath: "api_template.yaml"
#     APIVersion: "1.0.0"
#     PostmanCollectionTestFile: "sample_store.postman_collection.json"

# - run: |
#     echo "It works perfectly!"
