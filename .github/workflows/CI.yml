name: custom actions
on:
  push:
    branches: [main]

jobs:
  testing-actions:
    runs-on: ubuntu-latest
    steps:
      - name: checkout files to vm
        uses: actions/checkout@v2.3.4

      - name: Deploying to development tenant
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ./.github/actions/wso2apim/
        id: apim
        with:
          usernameDevTenant: "mihindu@wso2.com@development"
          passwordDevTenant: ${{secrets.PASSWORD}}
          APIProjectName: "SampleStore"
          OASJsonFilePath: "petstore.json"
          APIDefinitionFilePath: "api_template.yaml"
          APIVersion: "1.0.0"
          PostmanCollectionTestFile: "sample_store.postman_collection.json"

      - name: Deploying to production tenant
        if: github.event_name == 'push' && github.ref == 'refs/heads/production'
        uses: ./.github/actions/wso2apim/
        id: apim2
        with:
          usernameDevTenant: "mihindu@wso2.com@production"
          passwordDevTenant: ${{secrets.PASSWORD}}
          APIProjectName: "SampleStore"
          OASJsonFilePath: "petstore.json"
          APIDefinitionFilePath: "api_template.yaml"
          APIVersion: "1.0.0"
          PostmanCollectionTestFile: "sample_store.postman_collection.json"

      # - name: APIM Cloud CICD
      #   uses: mihinduranasinghe/WSO2-APIManager-Cloud-CICD@v1.1.0
      #   id: apim
      #   with:
      #     usernameDevTenant: "mihindu@wso2.com@development"
      #     passwordDevTenant: ${{secrets.PASSWORD}}
      #     usernameProdTenant: "mihindu@wso2.com@production"
      #     passwordProdTenant: ${{secrets.PASSWORD}}
      #     APIProjectName: "SampleStore"
      #     OASJsonFilePath: "petstore.json"
      #     APIDefinitionFilePath: "api_template.yaml"
      #     APIVersion: "1.0.0"
      #     PostmanCollectionTestFile: "sample_store.postman_collection.json"

      # - run: |
      #     echo "It works perfectly!"
